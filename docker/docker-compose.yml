services:
  # Kafka - data event queue with validation
  kafka:
    image: bitnami/kafka:latest
    env_file: ".env"
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Postgres - integration logs
  postgres:
    image: postgres:latest
    env_file: ".env"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  # Mongo - account/user data
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  # Express API - backend services
  backend:
    build:
      context: ../node
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
      mongo:
        condition: service_started
    networks:
      - app_network
    restart: unless-stopped

  # Next.js - frontend & request proxy
  frontend:
    build:
      context: ../node
      dockerfile: ../node/Dockerfile.frontend
    ports:
      - "3000:3000"
    env_file: .env
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  kafka_data:
  postgres_data:
  mongo_data:

networks:
  app_network:
    driver: bridge